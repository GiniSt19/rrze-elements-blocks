/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@wordpress/icons/build-module/library/symbol.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/symbol.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ \"@wordpress/primitives\");\n/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);\n\n/**\n * WordPress dependencies\n */\n\nconst symbol = (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {\n  d: \"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\"\n}));\n/* harmony default export */ __webpack_exports__[\"default\"] = (symbol);\n//# sourceMappingURL=symbol.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdvcmRwcmVzcy9pY29ucy9idWlsZC1tb2R1bGUvbGlicmFyeS9zeW1ib2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ2tEO0FBQ2xELGVBQWUsb0RBQWEsQ0FBQyxzREFBRztBQUNoQztBQUNBO0FBQ0EsQ0FBQyxFQUFFLG9EQUFhLENBQUMsdURBQUk7QUFDckI7QUFDQSxDQUFDO0FBQ0QsK0RBQWUsTUFBTSxFQUFDO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcnJ6ZS1lbGVtZW50cy8uL25vZGVfbW9kdWxlcy9Ad29yZHByZXNzL2ljb25zL2J1aWxkLW1vZHVsZS9saWJyYXJ5L3N5bWJvbC5qcz9mOTZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tIFwicmVhY3RcIjtcbi8qKlxuICogV29yZFByZXNzIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBTVkcsIFBhdGggfSBmcm9tICdAd29yZHByZXNzL3ByaW1pdGl2ZXMnO1xuY29uc3Qgc3ltYm9sID0gY3JlYXRlRWxlbWVudChTVkcsIHtcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgdmlld0JveDogXCIwIDAgMjQgMjRcIlxufSwgY3JlYXRlRWxlbWVudChQYXRoLCB7XG4gIGQ6IFwiTTIxLjMgMTAuOGwtNS42LTUuNmMtLjctLjctMS44LS43LTIuNSAwbC01LjYgNS42Yy0uNy43LS43IDEuOCAwIDIuNWw1LjYgNS42Yy4zLjMuOC41IDEuMi41cy45LS4yIDEuMi0uNWw1LjYtNS42Yy44LS43LjgtMS45LjEtMi41em0tMSAxLjRsLTUuNiA1LjZjLS4xLjEtLjMuMS0uNCAwbC01LjYtNS42Yy0uMS0uMS0uMS0uMyAwLS40bDUuNi01LjZzLjEtLjEuMi0uMS4xIDAgLjIuMWw1LjYgNS42Yy4xLjEuMS4zIDAgLjR6bS0xNi42LS40TDEwIDUuNWwtMS0xLTYuMyA2LjNjLS43LjctLjcgMS44IDAgMi41TDkgMTkuNWwxLjEtMS4xLTYuMy02LjNjLS4yIDAtLjItLjItLjEtLjN6XCJcbn0pKTtcbmV4cG9ydCBkZWZhdWx0IHN5bWJvbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bWJvbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@wordpress/icons/build-module/library/symbol.js\n");

/***/ }),

/***/ "./src/notice/index.js":
/*!*****************************!*\
  !*** ./src/notice/index.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/blocks */ \"@wordpress/blocks\");\n/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _edit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit */ \"./src/notice/edit.tsx\");\n/* harmony import */ var _save__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./save */ \"./src/notice/save.js\");\n/* harmony import */ var _block_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./block.json */ \"./src/notice/block.json\");\n/* harmony import */ var _editor_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./editor.scss */ \"./src/notice/editor.scss\");\n/* harmony import */ var _variations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./variations */ \"./src/notice/variations.js\");\n/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_0__.registerBlockType)(_block_json__WEBPACK_IMPORTED_MODULE_3__.name, {\n  /**\n   * Used to construct a preview for the block to be shown in the block inserter.\n   */\n  icon: {\n    src: /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"Ebene_1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 512 512\"\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: \"141.15\",\n      y: \"231.31\",\n      width: \"300.46\",\n      height: \"49.39\",\n      rx: \"5.73\",\n      ry: \"5.73\",\n      fillRule: \"evenodd\",\n      strokeWidth: \"0\"\n    }), /*#__PURE__*/React.createElement(\"rect\", {\n      x: \"70.38\",\n      y: \"231.31\",\n      width: \"50.4\",\n      height: \"49.39\",\n      rx: \"24.69\",\n      ry: \"24.69\",\n      fillRule: \"evenodd\",\n      strokeWidth: \"0\"\n    }))\n  },\n  variations: _variations__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  /**\n   * @see ./edit.js\n   */\n  edit: _edit__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  /**\n   * @see ./save.js\n   */\n  save: _save__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbm90aWNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDMEI7QUFDQTtBQUNVO0FBQ2I7QUFDZTs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxvRUFBaUIsQ0FBRUcsNkNBQWEsRUFBRTtFQUNqQztBQUNEO0FBQ0E7RUFDQ0csSUFBSSxFQUFFO0lBQ0xDLEdBQUcsZUFBRUMsS0FBQSxDQUFBQyxhQUFBO01BQUtDLEVBQUUsRUFBQyxTQUFTO01BQUNDLEtBQUssRUFBQyw0QkFBNEI7TUFBQ0MsT0FBTyxFQUFDO0lBQWEsZ0JBQUNKLEtBQUEsQ0FBQUMsYUFBQTtNQUFNSSxDQUFDLEVBQUMsUUFBUTtNQUFDQyxDQUFDLEVBQUMsUUFBUTtNQUFDQyxLQUFLLEVBQUMsUUFBUTtNQUFDQyxNQUFNLEVBQUMsT0FBTztNQUFDQyxFQUFFLEVBQUMsTUFBTTtNQUFDQyxFQUFFLEVBQUMsTUFBTTtNQUFDQyxRQUFRLEVBQUMsU0FBUztNQUFDQyxXQUFXLEVBQUM7SUFBRyxDQUFDLENBQUMsZUFBQVosS0FBQSxDQUFBQyxhQUFBO01BQU1JLENBQUMsRUFBQyxPQUFPO01BQUNDLENBQUMsRUFBQyxRQUFRO01BQUNDLEtBQUssRUFBQyxNQUFNO01BQUNDLE1BQU0sRUFBQyxPQUFPO01BQUNDLEVBQUUsRUFBQyxPQUFPO01BQUNDLEVBQUUsRUFBQyxPQUFPO01BQUNDLFFBQVEsRUFBQyxTQUFTO01BQUNDLFdBQVcsRUFBQztJQUFHLENBQUMsQ0FBTTtFQUN6VCxDQUFDO0VBQ0RoQixVQUFVLEVBQVZBLG1EQUFVO0VBQ1Y7QUFDRDtBQUNBO0VBQ0NpQixJQUFJLEVBQUVwQiw2Q0FBSTtFQUVWO0FBQ0Q7QUFDQTtFQUNDQyxJQUFJLEVBQUpBLDZDQUFJQTtBQUNMLENBQUUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JyemUtZWxlbWVudHMvLi9zcmMvbm90aWNlL2luZGV4LmpzP2QzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWdpc3RlcnMgYSBuZXcgYmxvY2sgcHJvdmlkZWQgYSB1bmlxdWUgbmFtZSBhbmQgYW4gb2JqZWN0IGRlZmluaW5nIGl0cyBiZWhhdmlvci5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLndvcmRwcmVzcy5vcmcvYmxvY2stZWRpdG9yL2RldmVsb3BlcnMvYmxvY2stYXBpLyNyZWdpc3RlcmluZy1hLWJsb2NrXG4gKi9cbmltcG9ydCB7IHJlZ2lzdGVyQmxvY2tUeXBlIH0gZnJvbSAnQHdvcmRwcmVzcy9ibG9ja3MnO1xuXG4vKipcbiAqIExldHMgd2VicGFjayBwcm9jZXNzIENTUywgU0FTUyBvciBTQ1NTIGZpbGVzIHJlZmVyZW5jZWQgaW4gSmF2YVNjcmlwdCBmaWxlcy5cbiAqIEFsbCBmaWxlcyBjb250YWluaW5nIGBzdHlsZWAga2V5d29yZCBhcmUgYnVuZGxlZCB0b2dldGhlci4gVGhlIGNvZGUgdXNlZFxuICogZ2V0cyBhcHBsaWVkIGJvdGggdG8gdGhlIGZyb250IG9mIHlvdXIgc2l0ZSBhbmQgdG8gdGhlIGVkaXRvci4gQWxsIG90aGVyIGZpbGVzXG4gKiBnZXQgYXBwbGllZCB0byB0aGUgZWRpdG9yIG9ubHkuXG4gKlxuICogQHNlZSBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9Ad29yZHByZXNzL3NjcmlwdHMjdXNpbmctY3NzXG4gKi9cblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IEVkaXQgZnJvbSAnLi9lZGl0JztcbmltcG9ydCBzYXZlIGZyb20gJy4vc2F2ZSc7XG5pbXBvcnQgbWV0YWRhdGEgZnJvbSAnLi9ibG9jay5qc29uJztcbmltcG9ydCAnLi9lZGl0b3Iuc2Nzcyc7XG5pbXBvcnQgdmFyaWF0aW9ucyBmcm9tICcuL3ZhcmlhdGlvbnMnO1xuXG4vKipcbiAqIEV2ZXJ5IGJsb2NrIHN0YXJ0cyBieSByZWdpc3RlcmluZyBhIG5ldyBibG9jayB0eXBlIGRlZmluaXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL2RldmVsb3Blci53b3JkcHJlc3Mub3JnL2Jsb2NrLWVkaXRvci9kZXZlbG9wZXJzL2Jsb2NrLWFwaS8jcmVnaXN0ZXJpbmctYS1ibG9ja1xuICovXG5yZWdpc3RlckJsb2NrVHlwZSggbWV0YWRhdGEubmFtZSwge1xuXHQvKipcblx0ICogVXNlZCB0byBjb25zdHJ1Y3QgYSBwcmV2aWV3IGZvciB0aGUgYmxvY2sgdG8gYmUgc2hvd24gaW4gdGhlIGJsb2NrIGluc2VydGVyLlxuXHQgKi9cblx0aWNvbjoge1xuXHRcdHNyYzogPHN2ZyBpZD1cIkViZW5lXzFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCI+PHJlY3QgeD1cIjE0MS4xNVwiIHk9XCIyMzEuMzFcIiB3aWR0aD1cIjMwMC40NlwiIGhlaWdodD1cIjQ5LjM5XCIgcng9XCI1LjczXCIgcnk9XCI1LjczXCIgZmlsbFJ1bGU9XCJldmVub2RkXCIgc3Ryb2tlV2lkdGg9XCIwXCIvPjxyZWN0IHg9XCI3MC4zOFwiIHk9XCIyMzEuMzFcIiB3aWR0aD1cIjUwLjRcIiBoZWlnaHQ9XCI0OS4zOVwiIHJ4PVwiMjQuNjlcIiByeT1cIjI0LjY5XCIgZmlsbFJ1bGU9XCJldmVub2RkXCIgc3Ryb2tlV2lkdGg9XCIwXCIvPjwvc3ZnPlxuXHR9LFxuXHR2YXJpYXRpb25zLFxuXHQvKipcblx0ICogQHNlZSAuL2VkaXQuanNcblx0ICovXG5cdGVkaXQ6IEVkaXQsXG5cblx0LyoqXG5cdCAqIEBzZWUgLi9zYXZlLmpzXG5cdCAqL1xuXHRzYXZlLFxufSApO1xuIl0sIm5hbWVzIjpbInJlZ2lzdGVyQmxvY2tUeXBlIiwiRWRpdCIsInNhdmUiLCJtZXRhZGF0YSIsInZhcmlhdGlvbnMiLCJuYW1lIiwiaWNvbiIsInNyYyIsIlJlYWN0IiwiY3JlYXRlRWxlbWVudCIsImlkIiwieG1sbnMiLCJ2aWV3Qm94IiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsInJ4IiwicnkiLCJmaWxsUnVsZSIsInN0cm9rZVdpZHRoIiwiZWRpdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/notice/index.js\n");

/***/ }),

/***/ "./src/notice/save.js":
/*!****************************!*\
  !*** ./src/notice/save.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ save; }\n/* harmony export */ });\n/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/block-editor */ \"@wordpress/block-editor\");\n/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _variations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./variations */ \"./src/notice/variations.js\");\n\n\nfunction save(_ref) {\n  var attributes = _ref.attributes;\n  var blockProps = _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_0__.useBlockProps.save();\n  var sameBlockCount = attributes.sameBlockCount,\n    style = attributes.style;\n  var matchedVariation = _variations__WEBPACK_IMPORTED_MODULE_1__[\"default\"].find(function (variation) {\n    return variation.name === attributes.style;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", blockProps, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notice\"\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(matchedVariation === null || matchedVariation === void 0 ? void 0 : matchedVariation.iconClass, \" rrze-elements-icon\")\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_0__.InnerBlocks.Content, null)))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbm90aWNlL3NhdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRTtBQUMvQjtBQUV2QixTQUFTRyxJQUFJQSxDQUFBQyxJQUFBLEVBQWlCO0VBQUEsSUFBZEMsVUFBVSxHQUFBRCxJQUFBLENBQVZDLFVBQVU7RUFDdkMsSUFBTUMsVUFBVSxHQUFHTixrRUFBYSxDQUFDRyxJQUFJLENBQUMsQ0FBQztFQUN2QyxJQUFRSSxjQUFjLEdBQVlGLFVBQVUsQ0FBcENFLGNBQWM7SUFBRUMsS0FBSyxHQUFLSCxVQUFVLENBQXBCRyxLQUFLO0VBRTdCLElBQU1DLGdCQUFnQixHQUFHUCxtREFBVSxDQUFDUSxJQUFJLENBQ3RDLFVBQUNDLFNBQVM7SUFBQSxPQUFLQSxTQUFTLENBQUNDLElBQUksS0FBS1AsVUFBVSxDQUFDRyxLQUFLO0VBQUEsQ0FDcEQsQ0FBQztFQUVELG9CQUNFSyxLQUFBLENBQUFDLGFBQUEsUUFBU1IsVUFBVSxlQUNqQk8sS0FBQSxDQUFBQyxhQUFBO0lBQUtDLFNBQVMsRUFBQztFQUFRLGdCQUNyQkYsS0FBQSxDQUFBQyxhQUFBLENBQUFELEtBQUEsQ0FBQUcsUUFBQSxxQkFhRUgsS0FBQSxDQUFBQyxhQUFBLDJCQUVFRCxLQUFBLENBQUFDLGFBQUE7SUFDRUMsU0FBUyxLQUFBRSxNQUFBLENBQUtSLGdCQUFnQixhQUFoQkEsZ0JBQWdCLHVCQUFoQkEsZ0JBQWdCLENBQUVTLFNBQVM7RUFBc0IsQ0FDMUQsQ0FDSixDQUFDLGVBQ05MLEtBQUEsQ0FBQUMsYUFBQSwyQkFDRUQsS0FBQSxDQUFBQyxhQUFBLENBQUNiLGdFQUFXLENBQUNrQixPQUFPLE1BQUUsQ0FDbkIsQ0FDTCxDQUNDLENBQ0YsQ0FBQztBQUVWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcnJ6ZS1lbGVtZW50cy8uL3NyYy9ub3RpY2Uvc2F2ZS5qcz8wOGIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUJsb2NrUHJvcHMsIElubmVyQmxvY2tzIH0gZnJvbSBcIkB3b3JkcHJlc3MvYmxvY2stZWRpdG9yXCI7XG5pbXBvcnQgdmFyaWF0aW9ucyBmcm9tIFwiLi92YXJpYXRpb25zXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNhdmUoeyBhdHRyaWJ1dGVzIH0pIHtcbiAgY29uc3QgYmxvY2tQcm9wcyA9IHVzZUJsb2NrUHJvcHMuc2F2ZSgpO1xuICBjb25zdCB7IHNhbWVCbG9ja0NvdW50LCBzdHlsZSB9ID0gYXR0cmlidXRlcztcblxuICBjb25zdCBtYXRjaGVkVmFyaWF0aW9uID0gdmFyaWF0aW9ucy5maW5kKFxuICAgICh2YXJpYXRpb24pID0+IHZhcmlhdGlvbi5uYW1lID09PSBhdHRyaWJ1dGVzLnN0eWxlXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IHsuLi5ibG9ja1Byb3BzfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibm90aWNlXCI+XG4gICAgICAgIDw+XG4gICAgICAgICAgey8qIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e2Bub3RpY2UgJHthdHRyaWJ1dGVzLnN0eWxlID8gYCR7YXR0cmlidXRlcy5zdHlsZX1gIDogXCJcIn1gfVxuICAgICAgICAgIHN0eWxlPXtcbiAgICAgICAgICAgIGF0dHJpYnV0ZXMuc3R5bGVcbiAgICAgICAgICAgICAgPyB7fVxuICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYXR0cmlidXRlcy5jb2xvcixcbiAgICAgICAgICAgICAgICAgIGNvbG9yOiBhdHRyaWJ1dGVzLnRleHRDb2xvcixcbiAgICAgICAgICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke2F0dHJpYnV0ZXMuYm9yZGVyQ29sb3J9YCxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICA+ICovfVxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICB7LyogUmVuZGVyIHRoZSBpY29uIGlmIGEgbWF0Y2hpbmcgdmFyaWF0aW9uIGlzIGZvdW5kICovfVxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHttYXRjaGVkVmFyaWF0aW9uPy5pY29uQ2xhc3N9IHJyemUtZWxlbWVudHMtaWNvbmB9XG4gICAgICAgICAgICA+PC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8SW5uZXJCbG9ja3MuQ29udGVudCAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8Lz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZUJsb2NrUHJvcHMiLCJJbm5lckJsb2NrcyIsInZhcmlhdGlvbnMiLCJzYXZlIiwiX3JlZiIsImF0dHJpYnV0ZXMiLCJibG9ja1Byb3BzIiwic2FtZUJsb2NrQ291bnQiLCJzdHlsZSIsIm1hdGNoZWRWYXJpYXRpb24iLCJmaW5kIiwidmFyaWF0aW9uIiwibmFtZSIsIlJlYWN0IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIkZyYWdtZW50IiwiY29uY2F0IiwiaWNvbkNsYXNzIiwiQ29udGVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/notice/save.js\n");

/***/ }),

/***/ "./src/notice/variations.js":
/*!**********************************!*\
  !*** ./src/notice/variations.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ \"@wordpress/components\");\n/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ \"@wordpress/i18n\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ \"@wordpress/blocks\");\n/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * WordPress dependencies\n */\n\n\n\n\n/** \n@typedef {import('@wordpress/blocks').WPBlockVariation} WPBlockVariation */\n\n/**\n * Template option choices for predefined columns layouts.\n *\n * @type {WPBlockVariation[]}\n */\nvar variations = [{\n  name: \"notice-attention\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Warning\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Warning\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-triangle-exclamation\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#a51c18\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-hinweis\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Hint\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Notice with hint-icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-info\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM232 152C232 138.8 242.8 128 256 128s24 10.75 24 24v128c0 13.25-10.75 24-24 24S232 293.3 232 280V152zM256 400c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 385.9 273.4 400 256 400z\"\n  })),\n  isDefault: true,\n  innerBlocks: [[\"core/column\"], [\"core/column\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-baustelle\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Maintenance\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Notice with wrench icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-screwdriver-wrench\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#4b4a56\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M507.6 122.8c-2.904-12.09-18.25-16.13-27.04-7.338l-76.55 76.56l-83.1-.0002l0-83.1l76.55-76.56c8.791-8.789 4.75-24.14-7.336-27.04c-23.69-5.693-49.34-6.111-75.92 .2484c-61.45 14.7-109.4 66.9-119.2 129.3C189.8 160.8 192.3 186.7 200.1 210.1l-178.1 178.1c-28.12 28.12-28.12 73.69 0 101.8C35.16 504.1 53.56 512 71.1 512s36.84-7.031 50.91-21.09l178.1-178.1c23.46 7.736 49.31 10.24 76.17 6.004c62.41-9.84 114.6-57.8 129.3-119.2C513.7 172.1 513.3 146.5 507.6 122.8zM80 456c-13.25 0-24-10.75-24-24c0-13.26 10.75-24 24-24s24 10.74 24 24C104 445.3 93.25 456 80 456z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-question\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Question\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Questionmark\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-question\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#005cae\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM256 400c-18 0-32-14-32-32s13.1-32 32-32c17.1 0 32 14 32 32S273.1 400 256 400zM325.1 258L280 286V288c0 13-11 24-24 24S232 301 232 288V272c0-8 4-16 12-21l57-34C308 213 312 206 312 198C312 186 301.1 176 289.1 176h-51.1C225.1 176 216 186 216 198c0 13-11 24-24 24s-24-11-24-24C168 159 199 128 237.1 128h51.1C329 128 360 159 360 198C360 222 347 245 325.1 258z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-minus\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Negative\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Minus icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-minus\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#a51c18\",\n    fillRule: \"evenodd\",\n    d: \"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM168 232C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H168z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-plus\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Positive\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Plus-icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-plus\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#00905a\",\n    fillRule: \"evenodd\",\n    d: \"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-idea\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Idea\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Lightbulb icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-lightbulb\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"orange\",\n    fillRule: \"evenodd\",\n    d: \"M112.1 454.3c0 6.297 1.816 12.44 5.284 17.69l17.14 25.69c5.25 7.875 17.17 14.28 26.64 14.28h61.67c9.438 0 21.36-6.401 26.61-14.28l17.08-25.68c2.938-4.438 5.348-12.37 5.348-17.7L272 415.1h-160L112.1 454.3zM192 0C90.02 .3203 16 82.97 16 175.1c0 44.38 16.44 84.84 43.56 115.8c16.53 18.84 42.34 58.23 52.22 91.45c.0313 .25 .0938 .5166 .125 .7823h160.2c.0313-.2656 .0938-.5166 .125-.7823c9.875-33.22 35.69-72.61 52.22-91.45C351.6 260.8 368 220.4 368 175.1C368 78.8 289.2 .0039 192 0zM288.4 260.1c-15.66 17.85-35.04 46.3-49.05 75.89h-94.61c-14.01-29.59-33.39-58.04-49.04-75.88C75.24 236.8 64 206.1 64 175.1C64 113.3 112.1 48.25 191.1 48C262.6 48 320 105.4 320 175.1C320 206.1 308.8 236.8 288.4 260.1zM176 80C131.9 80 96 115.9 96 160c0 8.844 7.156 16 16 16S128 168.8 128 160c0-26.47 21.53-48 48-48c8.844 0 16-7.148 16-15.99S184.8 80 176 80z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-download\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Download\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Download-icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-download\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fillRule: \"evenodd\",\n    d: \"M480 352h-133.5l-45.25 45.25C289.2 409.3 273.1 416 256 416s-33.16-6.656-45.25-18.75L165.5 352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-96C512 366.3 497.7 352 480 352zM432 456c-13.2 0-24-10.8-24-24c0-13.2 10.8-24 24-24s24 10.8 24 24C456 445.2 445.2 456 432 456zM233.4 374.6C239.6 380.9 247.8 384 256 384s16.38-3.125 22.62-9.375l128-128c12.49-12.5 12.49-32.75 0-45.25c-12.5-12.5-32.76-12.5-45.25 0L288 274.8V32c0-17.67-14.33-32-32-32C238.3 0 224 14.33 224 32v242.8L150.6 201.4c-12.49-12.5-32.75-12.5-45.25 0c-12.49 12.5-12.49 32.75 0 45.25L233.4 374.6z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-faubox\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"FAUbox\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"FAUbox-icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-cloud-arrow-down\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fillRule: \"evenodd\",\n    d: \"M144 480C64.47 480 0 415.5 0 336C0 273.2 40.17 219.8 96.2 200.1C96.07 197.4 96 194.7 96 192C96 103.6 167.6 32 256 32C315.3 32 367 64.25 394.7 112.2C409.9 101.1 428.3 96 448 96C501 96 544 138.1 544 192C544 204.2 541.7 215.8 537.6 226.6C596 238.4 640 290.1 640 352C640 422.7 582.7 480 512 480H144zM303 392.1C312.4 402.3 327.6 402.3 336.1 392.1L416.1 312.1C426.3 303.6 426.3 288.4 416.1 279C407.6 269.7 392.4 269.7 383 279L344 318.1V184C344 170.7 333.3 160 320 160C306.7 160 296 170.7 296 184V318.1L256.1 279C247.6 269.7 232.4 269.7 223 279C213.7 288.4 213.7 303.6 223 312.1L303 392.1z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-audio\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Audio\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Loudspeaker icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-headphones\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fillRule: \"evenodd\",\n    d: \"M412.6 182c-10.28-8.334-25.41-6.867-33.75 3.402c-8.406 10.24-6.906 25.35 3.375 33.74C393.5 228.4 400 241.8 400 255.1c0 14.17-6.5 27.59-17.81 36.83c-10.28 8.396-11.78 23.5-3.375 33.74c4.719 5.806 11.62 8.802 18.56 8.802c5.344 0 10.75-1.779 15.19-5.399C435.1 311.5 448 284.6 448 255.1S435.1 200.4 412.6 182zM473.1 108.2c-10.22-8.334-25.34-6.898-33.78 3.34c-8.406 10.24-6.906 25.35 3.344 33.74C476.6 172.1 496 213.3 496 255.1s-19.44 82.1-53.31 110.7c-10.25 8.396-11.75 23.5-3.344 33.74c4.75 5.775 11.62 8.771 18.56 8.771c5.375 0 10.75-1.779 15.22-5.431C518.2 366.9 544 313 544 255.1S518.2 145 473.1 108.2zM534.4 33.4c-10.22-8.334-25.34-6.867-33.78 3.34c-8.406 10.24-6.906 25.35 3.344 33.74C559.9 116.3 592 183.9 592 255.1s-32.09 139.7-88.06 185.5c-10.25 8.396-11.75 23.5-3.344 33.74C505.3 481 512.2 484 519.2 484c5.375 0 10.75-1.779 15.22-5.431C601.5 423.6 640 342.5 640 255.1S601.5 88.34 534.4 33.4zM301.2 34.98c-11.5-5.181-25.01-3.076-34.43 5.29L131.8 160.1H48c-26.51 0-48 21.48-48 47.96v95.92c0 26.48 21.49 47.96 48 47.96h83.84l134.9 119.8C272.7 477 280.3 479.8 288 479.8c4.438 0 8.959-.9314 13.16-2.835C312.7 471.8 320 460.4 320 447.9V64.12C320 51.55 312.7 40.13 301.2 34.98z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-video\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Video\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Video-icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-video\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fillRule: \"evenodd\",\n    d: \"M384 112v288c0 26.51-21.49 48-48 48h-288c-26.51 0-48-21.49-48-48v-288c0-26.51 21.49-48 48-48h288C362.5 64 384 85.49 384 112zM576 127.5v256.9c0 25.5-29.17 40.39-50.39 25.79L416 334.7V177.3l109.6-75.56C546.9 87.13 576 102.1 576 127.5z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-thumbs-up\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Thumbs up\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Thumps up icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-thumbs-up\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#00905a\",\n    fillRule: \"evenodd\",\n    d: \"M128 447.1V223.1c0-17.67-14.33-31.1-32-31.1H32c-17.67 0-32 14.33-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64C113.7 479.1 128 465.6 128 447.1zM512 224.1c0-26.5-21.48-47.98-48-47.98h-146.5c22.77-37.91 34.52-80.88 34.52-96.02C352 56.52 333.5 32 302.5 32c-63.13 0-26.36 76.15-108.2 141.6L178 186.6C166.2 196.1 160.2 210 160.1 224c-.0234 .0234 0 0 0 0L160 384c0 15.1 7.113 29.33 19.2 38.39l34.14 25.59C241 468.8 274.7 480 309.3 480H368c26.52 0 48-21.47 48-47.98c0-3.635-.4805-7.143-1.246-10.55C434 415.2 448 397.4 448 376c0-9.148-2.697-17.61-7.139-24.88C463.1 347 480 327.5 480 304.1c0-12.5-4.893-23.78-12.72-32.32C492.2 270.1 512 249.5 512 224.1z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}, {\n  name: \"notice-thumbs-down\",\n  title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Thumbs down\", \"rrze-elements-b\"),\n  description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(\"Thumbs down icon\", \"rrze-elements-b\"),\n  iconClass: \"fa-solid fa-thumbs-down\",\n  icon: /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SVG, {\n    width: \"1em\",\n    height: \"1em\",\n    fontSize: \"2em\",\n    viewBox: \"0 0 512 512\",\n    className: \"rrze-elements-icon\"\n    // style=\"font-size: 2em; fill: currentcolor;\"\n    ,\n    alt: \"Exclamation mark\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Path, {\n    fill: \"#a51c18\",\n    fillRule: \"evenodd\",\n    d: \"M96 32.04H32c-17.67 0-32 14.32-32 31.1v223.1c0 17.67 14.33 31.1 32 31.1h64c17.67 0 32-14.33 32-31.1V64.03C128 46.36 113.7 32.04 96 32.04zM467.3 240.2C475.1 231.7 480 220.4 480 207.9c0-23.47-16.87-42.92-39.14-47.09C445.3 153.6 448 145.1 448 135.1c0-21.32-14-39.18-33.25-45.43C415.5 87.12 416 83.61 416 79.98C416 53.47 394.5 32 368 32h-58.69c-34.61 0-68.28 11.22-95.97 31.98L179.2 89.57C167.1 98.63 160 112.9 160 127.1l.1074 160c0 0-.0234-.0234 0 0c.0703 13.99 6.123 27.94 17.91 37.36l16.3 13.03C276.2 403.9 239.4 480 302.5 480c30.96 0 49.47-24.52 49.47-48.11c0-15.15-11.76-58.12-34.52-96.02H464c26.52 0 48-21.47 48-47.98C512 262.5 492.2 241.9 467.3 240.2z\"\n  })),\n  innerBlocks: [[\"core/paragraph\"]],\n  scope: [\"block\"]\n}];\n/* harmony default export */ __webpack_exports__[\"default\"] = (variations);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/notice/variations.js\n");

/***/ }),

/***/ "./src/notice/edit.tsx":
/*!*****************************!*\
  !*** ./src/notice/edit.tsx ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Edit; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/block-editor */ \"@wordpress/block-editor\");\n/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ \"@wordpress/blocks\");\n/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/element */ \"@wordpress/element\");\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ \"@wordpress/i18n\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ \"@wordpress/data\");\n/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ \"@wordpress/components\");\n/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/icons */ \"./node_modules/@wordpress/icons/build-module/library/symbol.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// import { TextControl } from \"@wordpress/components\";\n\n\n\n\n\n\n\nfunction Edit(_ref) {\n  var blockProps = _ref.blockProps,\n    attributes = _ref.attributes,\n    setAttributes = _ref.setAttributes;\n  var props = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.useBlockProps)();\n  var icon = attributes.icon;\n  var _ref2 = (icon === null || icon === void 0 ? void 0 : icon.split(\" \")) || [],\n    _ref3 = _slicedToArray(_ref2, 2),\n    iconType = _ref3[0],\n    iconName = _ref3[1];\n  // isOpen state is used to control the opening and closing of the icon picker modal\n  var _useState = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setOpen = _useState2[1];\n  var blockName = \"rrze-elements/notice\";\n  var variations = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(function (select) {\n    var _select = select(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.store),\n      getBlockVariations = _select.getBlockVariations;\n    return getBlockVariations(blockName, \"block\");\n  }, [blockName]);\n  var matchedVariation = variations.find(function (variation) {\n    return variation.name === attributes.style;\n  });\n  var openModal = function openModal() {\n    return setOpen(true);\n  };\n  var closeModal = function closeModal() {\n    return setOpen(false);\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({}, props, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.InspectorControls, {\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {\n        title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Style Settings\", \"rrze-elements-b\"),\n        initialOpen: true,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.__experimentalBlockVariationPicker, {\n          variations: variations,\n          onSelect: function onSelect(variation) {\n            setAttributes({\n              style: variation === null || variation === void 0 ? void 0 : variation.name\n            });\n          }\n        })\n      })\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.BlockControls, {\n      controls: true,\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToolbarGroup, {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToolbarItem, {\n          children: function children() {\n            return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToolbarButton, {\n                icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n                label: icon === \"\" ? (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Select a style\", \"rrze-elements-b\") : (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Change the style\", \"rrze-elements-b\"),\n                onClick: openModal,\n                placeholder: undefined\n              }), isOpen && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Modal, {\n                title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Select an Icon\", \"rrze-elements-b\"),\n                onRequestClose: closeModal,\n                children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.__experimentalBlockVariationPicker, {\n                  variations: variations,\n                  onSelect: function onSelect(variation) {\n                    setAttributes({\n                      style: variation === null || variation === void 0 ? void 0 : variation.name\n                    });\n                  }\n                }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {\n                  variant: \"primary\",\n                  onClick: closeModal,\n                  children: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Save changes\", \"rrze-elements-b\")\n                })]\n              })]\n            });\n          }\n        })\n      })\n    }), !attributes.style && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Placeholder, {\n      icon: \"admin-plugins\",\n      label: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Notice\", \"rrze-elements-b\"),\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.__experimentalBlockVariationPicker, {\n        variations: variations,\n        onSelect: function onSelect(variation) {\n          setAttributes({\n            style: variation === null || variation === void 0 ? void 0 : variation.name\n          });\n        }\n      })\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n      className: \"notice no-title \".concat(attributes.style ? \"alert-\".concat(attributes.style) : \"\"),\n      style: attributes.style ? {} : {\n        backgroundColor: attributes.color,\n        color: attributes.textColor,\n        border: \"1px solid \".concat(attributes.borderColor)\n      },\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n            className: \"\".concat(matchedVariation === null || matchedVariation === void 0 ? void 0 : matchedVariation.iconClass, \" rrze-elements-icon\")\n          })\n        })\n      }), attributes.style && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_1__.InnerBlocks, {\n          template: [[\"core/heading\", {\n            placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Add a Headline\", \"rrze-elements-b\"),\n            level: 3\n          }], [\"core/paragraph\", {\n            placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__.__)(\"Add a description…\", \"rrze-elements-b\")\n          }]],\n          allowedBlocks: [\"core/heading\", \"core/paragraph\"],\n          templateLock: false\n        })\n      })]\n    })]\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQztVQUNqREMsWUFBWSxFQUFFO1FBQUs7TUFDbkIsRUFFSDtJQUFBLEVBQ0c7RUFBQSxHQUNGO0FBRVYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ycnplLWVsZW1lbnRzLy4vc3JjL25vdGljZS9lZGl0LnRzeD80NWZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IFRleHRDb250cm9sIH0gZnJvbSBcIkB3b3JkcHJlc3MvY29tcG9uZW50c1wiO1xuaW1wb3J0IHtcbiAgdXNlQmxvY2tQcm9wcyxcbiAgSW5uZXJCbG9ja3MsXG4gIEluc3BlY3RvckNvbnRyb2xzLFxuICBCbG9ja0NvbnRyb2xzLFxuICBfX2V4cGVyaW1lbnRhbEJsb2NrVmFyaWF0aW9uUGlja2VyIGFzIEJsb2NrVmFyaWF0aW9uUGlja2VyLFxuICBzdG9yZSBhcyBibG9ja0VkaXRvclN0b3JlLFxufSBmcm9tIFwiQHdvcmRwcmVzcy9ibG9jay1lZGl0b3JcIjtcbmltcG9ydCB7IHN0b3JlIGFzIGJsb2Nrc1N0b3JlIH0gZnJvbSBcIkB3b3JkcHJlc3MvYmxvY2tzXCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcIkB3b3JkcHJlc3MvZWxlbWVudFwiO1xuaW1wb3J0IHsgX18gfSBmcm9tIFwiQHdvcmRwcmVzcy9pMThuXCI7XG5pbXBvcnQgeyB1c2VTZWxlY3QgfSBmcm9tIFwiQHdvcmRwcmVzcy9kYXRhXCI7XG5pbXBvcnQge1xuICBQbGFjZWhvbGRlcixcbiAgUGFuZWxCb2R5LFxuICBUb29sYmFySXRlbSxcbiAgVG9vbGJhckdyb3VwLFxuICBUb29sYmFyQnV0dG9uLFxuICBCdXR0b24sXG4gIE1vZGFsLFxufSBmcm9tIFwiQHdvcmRwcmVzcy9jb21wb25lbnRzXCI7XG5cbmltcG9ydCB7IHN5bWJvbCB9IGZyb20gXCJAd29yZHByZXNzL2ljb25zXCI7XG5cbmltcG9ydCB7XG4gIFN0YW5kYXJkQ29sb3JTd2l0Y2hlcixcbiAgU3RhbmRhcmRDb2xvclN3aXRjaGVyVG9vbGJhcixcbiAgQm9yZGVyQ29sb3JQaWNrZXIsXG59IGZyb20gXCIuLi9jb21wb25lbnRzL0N1c3RvbUNvbG9yU3dpdGNoZXJcIjtcblxuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHZhcmlhdGlvbnMgZnJvbSBcIi4vdmFyaWF0aW9uc1wiO1xuXG5pbnRlcmZhY2UgRWRpdFByb3BzIHtcbiAgYXR0cmlidXRlczoge1xuICAgIHN0eWxlPzogc3RyaW5nO1xuICAgIGNvbG9yOiBzdHJpbmc7XG4gICAgdGV4dENvbG9yPzogc3RyaW5nO1xuICAgIGJvcmRlckNvbG9yPzogc3RyaW5nO1xuICAgIGljb24/OiBzdHJpbmc7XG4gICAgc3ZnU3RyaW5nPzogc3RyaW5nO1xuICB9O1xuICBzZXRBdHRyaWJ1dGVzOiAoYXR0cmlidXRlczogUGFydGlhbDxFZGl0UHJvcHNbXCJhdHRyaWJ1dGVzXCJdPikgPT4gdm9pZDtcbiAgY2xpZW50SWQ6IHN0cmluZztcbiAgY29udGV4dDogeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcbiAgYmxvY2tQcm9wczogYW55O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFZGl0KHtcbiAgYmxvY2tQcm9wcyxcbiAgYXR0cmlidXRlcyxcbiAgc2V0QXR0cmlidXRlcyxcbn06IEVkaXRQcm9wcykge1xuICBjb25zdCBwcm9wcyA9IHVzZUJsb2NrUHJvcHMoKTtcbiAgY29uc3QgeyBpY29uIH0gPSBhdHRyaWJ1dGVzO1xuICBjb25zdCBbaWNvblR5cGUsIGljb25OYW1lXSA9IGljb24/LnNwbGl0KFwiIFwiKSB8fCBbXTtcblxuICAvLyBpc09wZW4gc3RhdGUgaXMgdXNlZCB0byBjb250cm9sIHRoZSBvcGVuaW5nIGFuZCBjbG9zaW5nIG9mIHRoZSBpY29uIHBpY2tlciBtb2RhbFxuICBjb25zdCBbaXNPcGVuLCBzZXRPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBibG9ja05hbWUgPSBcInJyemUtZWxlbWVudHMvbm90aWNlXCI7XG5cbiAgY29uc3QgdmFyaWF0aW9ucyA9IHVzZVNlbGVjdChcbiAgICAoc2VsZWN0KSA9PiB7XG4gICAgICBjb25zdCB7IGdldEJsb2NrVmFyaWF0aW9ucyB9ID0gc2VsZWN0KGJsb2Nrc1N0b3JlKSBhcyBhbnk7XG4gICAgICByZXR1cm4gZ2V0QmxvY2tWYXJpYXRpb25zKGJsb2NrTmFtZSwgXCJibG9ja1wiKTtcbiAgICB9LFxuICAgIFtibG9ja05hbWVdXG4gICk7XG5cbiAgY29uc3QgbWF0Y2hlZFZhcmlhdGlvbiA9IHZhcmlhdGlvbnMuZmluZChcbiAgICAodmFyaWF0aW9uOiBhbnkpID0+IHZhcmlhdGlvbi5uYW1lID09PSBhdHRyaWJ1dGVzLnN0eWxlXG4gICk7XG5cbiAgY29uc3Qgb3Blbk1vZGFsID0gKCkgPT4gc2V0T3Blbih0cnVlKTtcbiAgY29uc3QgY2xvc2VNb2RhbCA9ICgpID0+IHNldE9wZW4oZmFsc2UpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiB7Li4ucHJvcHN9PlxuICAgICAgPEluc3BlY3RvckNvbnRyb2xzPlxuICAgICAgICA8UGFuZWxCb2R5XG4gICAgICAgICAgdGl0bGU9e19fKFwiU3R5bGUgU2V0dGluZ3NcIiwgXCJycnplLWVsZW1lbnRzLWJcIil9XG4gICAgICAgICAgaW5pdGlhbE9wZW49e3RydWV9XG4gICAgICAgID5cbiAgICAgICAgICA8QmxvY2tWYXJpYXRpb25QaWNrZXJcbiAgICAgICAgICAgIHZhcmlhdGlvbnM9e3ZhcmlhdGlvbnN9XG4gICAgICAgICAgICBvblNlbGVjdD17KHZhcmlhdGlvbikgPT4ge1xuICAgICAgICAgICAgICBzZXRBdHRyaWJ1dGVzKHsgc3R5bGU6IHZhcmlhdGlvbj8ubmFtZSB9KTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9QYW5lbEJvZHk+XG4gICAgICA8L0luc3BlY3RvckNvbnRyb2xzPlxuICAgICAgPEJsb2NrQ29udHJvbHMgY29udHJvbHM+XG4gICAgICAgIDxUb29sYmFyR3JvdXA+XG4gICAgICAgICAgPFRvb2xiYXJJdGVtPlxuICAgICAgICAgICAgeygpID0+IChcbiAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICA8VG9vbGJhckJ1dHRvblxuICAgICAgICAgICAgICAgICAgaWNvbj17c3ltYm9sfVxuICAgICAgICAgICAgICAgICAgbGFiZWw9e2ljb24gPT09IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgPyBfXyhcIlNlbGVjdCBhIHN0eWxlXCIsIFwicnJ6ZS1lbGVtZW50cy1iXCIpXG4gICAgICAgICAgICAgICAgICAgIDogX18oXCJDaGFuZ2UgdGhlIHN0eWxlXCIsIFwicnJ6ZS1lbGVtZW50cy1iXCIpfVxuICAgICAgICAgICAgICAgICAgb25DbGljaz17b3Blbk1vZGFsfSBwbGFjZWhvbGRlcj17dW5kZWZpbmVkfSAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHtpc09wZW4gJiYgKFxuICAgICAgICAgICAgICAgICAgPE1vZGFsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXtfXyhcIlNlbGVjdCBhbiBJY29uXCIsIFwicnJ6ZS1lbGVtZW50cy1iXCIpfVxuICAgICAgICAgICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17Y2xvc2VNb2RhbH1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPEJsb2NrVmFyaWF0aW9uUGlja2VyXG4gICAgICAgICAgICAgICAgICAgICAgdmFyaWF0aW9ucz17dmFyaWF0aW9uc31cbiAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdD17KHZhcmlhdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QXR0cmlidXRlcyh7IHN0eWxlOiB2YXJpYXRpb24/Lm5hbWUgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwicHJpbWFyeVwiIG9uQ2xpY2s9e2Nsb3NlTW9kYWx9PlxuICAgICAgICAgICAgICAgICAgICAgIHtfXyhcIlNhdmUgY2hhbmdlc1wiLCBcInJyemUtZWxlbWVudHMtYlwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICA8L01vZGFsPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L1Rvb2xiYXJJdGVtPlxuICAgICAgICA8L1Rvb2xiYXJHcm91cD5cbiAgICAgIDwvQmxvY2tDb250cm9scz5cblxuICAgICAgeyFhdHRyaWJ1dGVzLnN0eWxlICYmIChcbiAgICAgICAgPFBsYWNlaG9sZGVyIGljb249XCJhZG1pbi1wbHVnaW5zXCIgbGFiZWw9e19fKFwiTm90aWNlXCIsIFwicnJ6ZS1lbGVtZW50cy1iXCIpfT5cbiAgICAgICAgICA8QmxvY2tWYXJpYXRpb25QaWNrZXJcbiAgICAgICAgICAgIHZhcmlhdGlvbnM9e3ZhcmlhdGlvbnN9XG4gICAgICAgICAgICBvblNlbGVjdD17KHZhcmlhdGlvbikgPT4ge1xuICAgICAgICAgICAgICBzZXRBdHRyaWJ1dGVzKHsgc3R5bGU6IHZhcmlhdGlvbj8ubmFtZSB9KTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9QbGFjZWhvbGRlcj5cbiAgICAgICl9XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT17YG5vdGljZSBuby10aXRsZSAke1xuICAgICAgICAgIGF0dHJpYnV0ZXMuc3R5bGUgPyBgYWxlcnQtJHthdHRyaWJ1dGVzLnN0eWxlfWAgOiBcIlwiXG4gICAgICAgIH1gfVxuICAgICAgICBzdHlsZT17XG4gICAgICAgICAgYXR0cmlidXRlcy5zdHlsZVxuICAgICAgICAgICAgPyB7fVxuICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhdHRyaWJ1dGVzLmNvbG9yLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBhdHRyaWJ1dGVzLnRleHRDb2xvcixcbiAgICAgICAgICAgICAgICBib3JkZXI6IGAxcHggc29saWQgJHthdHRyaWJ1dGVzLmJvcmRlckNvbG9yfWAsXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgPlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICB7LyogUmVuZGVyIHRoZSBpY29uIGlmIGEgbWF0Y2hpbmcgdmFyaWF0aW9uIGlzIGZvdW5kICovfVxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgJHttYXRjaGVkVmFyaWF0aW9uPy5pY29uQ2xhc3N9IHJyemUtZWxlbWVudHMtaWNvbmB9Pjwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHthdHRyaWJ1dGVzLnN0eWxlICYmIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxJbm5lckJsb2Nrc1xuICAgICAgICAgICAgdGVtcGxhdGU9e1tcbiAgICAgICAgICAgICAgW1wiY29yZS9oZWFkaW5nXCIsIHsgcGxhY2Vob2xkZXI6IF9fKFwiQWRkIGEgSGVhZGxpbmVcIiwgXCJycnplLWVsZW1lbnRzLWJcIiksIGxldmVsOiAzLCB9XSxcbiAgICAgICAgICAgICAgW1wiY29yZS9wYXJhZ3JhcGhcIiwgeyBwbGFjZWhvbGRlcjogX18oXCJBZGQgYSBkZXNjcmlwdGlvbuKAplwiLCBcInJyemUtZWxlbWVudHMtYlwiKSB9XSxcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgICBhbGxvd2VkQmxvY2tzPXtbXCJjb3JlL2hlYWRpbmdcIiwgXCJjb3JlL3BhcmFncmFwaFwiXX1cbiAgICAgICAgICAgIHRlbXBsYXRlTG9jaz17ZmFsc2V9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZUJsb2NrUHJvcHMiLCJJbm5lckJsb2NrcyIsIkluc3BlY3RvckNvbnRyb2xzIiwiQmxvY2tDb250cm9scyIsIl9fZXhwZXJpbWVudGFsQmxvY2tWYXJpYXRpb25QaWNrZXIiLCJCbG9ja1ZhcmlhdGlvblBpY2tlciIsInN0b3JlIiwiYmxvY2tzU3RvcmUiLCJ1c2VTdGF0ZSIsIl9fIiwidXNlU2VsZWN0IiwiUGxhY2Vob2xkZXIiLCJQYW5lbEJvZHkiLCJUb29sYmFySXRlbSIsIlRvb2xiYXJHcm91cCIsIlRvb2xiYXJCdXR0b24iLCJCdXR0b24iLCJNb2RhbCIsInN5bWJvbCIsIkVkaXQiLCJfcmVmIiwiYmxvY2tQcm9wcyIsImF0dHJpYnV0ZXMiLCJzZXRBdHRyaWJ1dGVzIiwicHJvcHMiLCJpY29uIiwiX3JlZjIiLCJzcGxpdCIsIl9yZWYzIiwiX3NsaWNlZFRvQXJyYXkiLCJpY29uVHlwZSIsImljb25OYW1lIiwiX3VzZVN0YXRlIiwiX3VzZVN0YXRlMiIsImlzT3BlbiIsInNldE9wZW4iLCJibG9ja05hbWUiLCJ2YXJpYXRpb25zIiwic2VsZWN0IiwiX3NlbGVjdCIsImdldEJsb2NrVmFyaWF0aW9ucyIsIm1hdGNoZWRWYXJpYXRpb24iLCJmaW5kIiwidmFyaWF0aW9uIiwibmFtZSIsInN0eWxlIiwib3Blbk1vZGFsIiwiY2xvc2VNb2RhbCIsIl9qc3hzIiwiT2JqZWN0IiwiYXNzaWduIiwiY2hpbGRyZW4iLCJfanN4IiwidGl0bGUiLCJpbml0aWFsT3BlbiIsIm9uU2VsZWN0IiwiY29udHJvbHMiLCJfRnJhZ21lbnQiLCJsYWJlbCIsIm9uQ2xpY2siLCJwbGFjZWhvbGRlciIsInVuZGVmaW5lZCIsIm9uUmVxdWVzdENsb3NlIiwidmFyaWFudCIsImNsYXNzTmFtZSIsImNvbmNhdCIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwidGV4dENvbG9yIiwiYm9yZGVyIiwiYm9yZGVyQ29sb3IiLCJpY29uQ2xhc3MiLCJ0ZW1wbGF0ZSIsImxldmVsIiwiYWxsb3dlZEJsb2NrcyIsInRlbXBsYXRlTG9jayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/notice/edit.tsx\n");

/***/ }),

/***/ "./src/notice/editor.scss":
/*!********************************!*\
  !*** ./src/notice/editor.scss ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbm90aWNlL2VkaXRvci5zY3NzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JyemUtZWxlbWVudHMvLi9zcmMvbm90aWNlL2VkaXRvci5zY3NzP2VmMjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/notice/editor.scss\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-runtime.js":
/*!*******************************************!*\
  !*** ./node_modules/react/jsx-runtime.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLCtJQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL3JyemUtZWxlbWVudHMvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/OWNhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-runtime.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ (function(module) {

module.exports = window["React"];

/***/ }),

/***/ "@wordpress/block-editor":
/*!*************************************!*\
  !*** external ["wp","blockEditor"] ***!
  \*************************************/
/***/ (function(module) {

module.exports = window["wp"]["blockEditor"];

/***/ }),

/***/ "@wordpress/blocks":
/*!********************************!*\
  !*** external ["wp","blocks"] ***!
  \********************************/
/***/ (function(module) {

module.exports = window["wp"]["blocks"];

/***/ }),

/***/ "@wordpress/components":
/*!************************************!*\
  !*** external ["wp","components"] ***!
  \************************************/
/***/ (function(module) {

module.exports = window["wp"]["components"];

/***/ }),

/***/ "@wordpress/data":
/*!******************************!*\
  !*** external ["wp","data"] ***!
  \******************************/
/***/ (function(module) {

module.exports = window["wp"]["data"];

/***/ }),

/***/ "@wordpress/element":
/*!*********************************!*\
  !*** external ["wp","element"] ***!
  \*********************************/
/***/ (function(module) {

module.exports = window["wp"]["element"];

/***/ }),

/***/ "@wordpress/i18n":
/*!******************************!*\
  !*** external ["wp","i18n"] ***!
  \******************************/
/***/ (function(module) {

module.exports = window["wp"]["i18n"];

/***/ }),

/***/ "@wordpress/primitives":
/*!************************************!*\
  !*** external ["wp","primitives"] ***!
  \************************************/
/***/ (function(module) {

module.exports = window["wp"]["primitives"];

/***/ }),

/***/ "./src/notice/block.json":
/*!*******************************!*\
  !*** ./src/notice/block.json ***!
  \*******************************/
/***/ (function(module) {

module.exports = /*#__PURE__*/JSON.parse('{"$schema":"https://schemas.wp.org/trunk/block.json","apiVersion":3,"name":"rrze-elements/notice","version":"1.0.0","title":"Notice","category":"rrze_elements","description":"Creates an notice.","attributes":{"style":{"type":"string"}},"example":{"attributes":{"style":"notice-hinweis"},"innerBlocks":[{"name":"core/heading","attributes":{"content":"Info"}},{"name":"core/paragraph","attributes":{"content":"This is an info notice."}}]},"supports":{"html":false},"textdomain":"rrze-elements-b","editorScript":"file:./index.js","editorStyle":"file:./index.css","style":"file:./style-index.css"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/notice/index.js");
/******/ 	
/******/ })()
;